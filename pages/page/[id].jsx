
import Head from 'next/head';
import { client } from "../../libs/client";
import Header from 'components/Header';
import Footer from 'components/Footer';
import Category from 'components/Category';
import Author from 'components/Author';
import ProductList from 'components/ProductList';
import BlogBox from 'components/BlogBox';
import styles from './Page.module.css'

const PER_PAGE = 2; 

//ページネーションをした後の全体のページ
export default function BlogPageId({ blog, totalCount }) {
  return (
    <div>
      

      <Head>
        <title>SITENAME</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>


      <Header />
      <main className={styles.main}>
        
        
    {/* 左サイド */}

        <div  className={styles.mainLeft}>
          <ProductList/>
          <BlogBox blogs={blog} totalCount={totalCount} visible={true}/>
        </div>


    {/* 右サイド */}
        <div className={styles.mainRight}>
          <Category blogs={blog}/>
          <Author/>
        </div>



      </main>

      <Footer/>


    </div>
  );
}












// 動的なページを作成
export const getStaticPaths = async () => {
  const repos = await client.get({ endpoint: "blog" });

  const range = (start, end) => [...Array(end - start + 1)].map((_, i) => start + i);

  const paths = range(1, Math.ceil(repos.totalCount / PER_PAGE)).map((repo) => `/page/${repo}`);

  return { paths, fallback: false };
};

// データを取得
export const getStaticProps = async (context) => {
  const id = context.params.id;

  const data = await client.get({ endpoint: "blog", queries: { offset: (id - 1) * 2, limit: 2 } });

  return {
    props: {
      blog: data.contents,
      totalCount: data.totalCount,
    },
  };
};